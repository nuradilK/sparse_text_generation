# @package _global_
train_data_file: "/home/nuradil/data/wikitext-2/wiki.train.tokens"  # "The input training data file (a text file)."
output_dir: "/home/nuradil/sparse_text_generation/models/entmax1.2_new"  # "The output directory where the model predictions and checkpoints will be written."
eval_data_file: "/home/nuradil/data/wikitext-2/wiki.test.tokens"  # "An optional input evaluation data file to evaluate the perplexity on (a text file)." 
model_type: "gpt2" # " The model architecture to be fine-tuned."
model_name_or_path: "gpt2-medium"  # "The model checkpoint for weights initialization."
mlm: False # "Train with masked-language modeling loss instead of language modeling."
mlm_probability: 0.15  # "Ratio of tokens to mask for masked language modeling loss"
config_name: ""  # "Optional pretrained config name or path if not the same as model_name_or_path"
tokenizer_name: ""  # "Optional pretrained tokenizer name or path if not the same as model_name_or_path"
cache_dir: ""  # "Optional directory to store the pre-trained models downloaded from s3 (instread of the defauult one)"
block_size: 256  # "Optional input sequence length after tokenization. The training dataset will be truncated in block of this size for training."       "Defauzlt to the model max input length for single sentence inputs (take into account special tokens)."
do_train: True # "Whether to run training."
do_eval: False # "Whether to run eval on the dev set."
evaluate_during_training: True # "Run evaluation during training  each logging step."
do_lower_case: False # "Set this flag if you are using an uncased model."
calibration_par: 0.1  # "Calibration parameter"
mode: "finetune"  
epsilon: 0.000001  
per_gpu_train_batch_size: 1  # "Batch size per GPU/CPU for training."
per_gpu_eval_batch_size: 1  # "Batch size per GPU/CPU for evaluation."
gradient_accumulation_steps: 1  # "Number of updates steps to accumulate before performing a backward/update pass."
learning_rate: 6.25e-5  # "The initial learning rate for Adam."
weight_decay: 0.01  # "Weight decay if we apply some."
adam_epsilon: 1e-8  # "Epsilon for Adam optimizer."
max_grad_norm: 1.0  # "Max gradient norm."
num_train_epochs: 1.0  # "Total number of training epochs to perform."
max_steps: -1  # "If > 0: set total number of training steps to perform. Override num_train_epochs."
warmup_steps: 0  # "Linear warmup over warmup_steps."
loss: "entmax"  # "Loss function to use for fine-tuning (only for GPT-2 so far)"
top_p: 0  
top_k: 0  
entmax_alpha: 1.2  
entmax_k: 512  
entmax_bisect_iter: 50  
eval_metric: 'jsd'  
logging_steps: 10000  # "Log every X updates steps."
temp: 0  
save_steps: 10000  # "Save checkpoint every X updates steps."
eval_all_checkpoints: False # "Evaluate all checkpoints starting with the same prefix as model_name_or_path ending and ending with step number"
no_cuda: False # "Avoid using CUDA when available"
overwrite_output_dir: True # "Overwrite the content of the output directory"
overwrite_cache: False # "Overwrite the cached training and evaluation sets"
seed: 42  # "random seed for initialization"
fp16: False # "Whether to use 16-bit (mixed) precision (through NVIDIA apex) instead of 32-bit"
fp16_opt_level: 'O1'  # "For fp16: Apex AMP optimization level selected in ['O0', 'O1', 'O2', and 'O3']."       "See details  https://nvidia.github.io/apex/amp.html"
local_rank: -1  # "For distributed training: local_rank"
server_ip: ''  # "For distant debugging."
server_port: ''  # "For distant debugging."
unlikelihood_seq: False
n_gpu: 
device: 